import os
from re import match
import json

try:
    from send2trash import send2trash
    send2trashInstalled = True
except:
    send2trashInstalled = False

firstline = 4
bfco = "PIE.@SGVF|BFCO_AttackSpeed|"
mco = "PIE.@SGVF|MCO_AttackSpeed|"
default = {
    "Author"        : "Doc656",
    #Setting
    "hkanno64path"  : ".",
    #Gui
    "Load"          : "Load",
    "Speed"         : "Speed:",
    "Execute"       : "Execute",
    "changeDir"     : "hkanno64 path",
    #string
    "Select Folder" : "Select Folder",
    "Message"       : "Message",
    "Ask Update"    : "Update .hkx files?",
    "Ask Delete"    : "delete .txt files generated by hkanno64?",
    "Notification"  : "Animation files are modified!",
    "Warning"       : "Warning",
    "No hkanno64"   : "hkanno64.exe is not exist at the destinated path!",
    "No rootpath"   : "Root path is not selected!",
}

class config:
    def __init__(self):
        global default
        self.config = {}
        self.read()

    def get(self, key):
        return self.config[key]

    def read(self):
        if self.config == {}:
            try:
                with open("config.json", 'r') as j:
                    self.config = json.load(j)
            except:
                self.config = default
                self.dump()

        if len(self.config) < len(default):
            self.update()

        return self.config

    def update(self):
        temp = self.config
        self.config = default
        for i in temp.keys():
            self.config[i] = temp[i]

    def edit(self,key, val):
        self.config[key] = val

    def dump(self):
        with open("config.json", 'w') as j:
            json.dump(self.config, j)

def ispathvalid(directory):
    return os.path.exists(os.path.join(directory,"hkanno64.exe"))

def readfile(filename):
    with open(filename, 'r') as f:
        data = f.read().splitlines()
    return data

def writefile(filename, datalist):
    with open(filename, 'w') as f:
        for i in datalist:
            f.write(f"{i}\n")

def changespeed(string,multiple):
    splitmark = string.rfind('|') + 1
    ospd = float(string[splitmark:])
    return f"{string[:splitmark]}{str(ospd * multiple)}"

def editanno(filename, multiple, update = False,delete = False, hkannopath = ".", speedanno = bfco):
    os.chdir(hkannopath)
    os.system(f"hkanno64.exe dump -o {filename}.txt {filename}")

    anno = readfile(f"{filename}.txt")

    for i in range(firstline, len(anno)):
        if speedanno in anno[i]:
            anno[i] = changespeed(anno[i], multiple)

    if not (f"0.000000 {speedanno}" in anno[firstline]):
        anno.insert(firstline, f"0.000000 {speedanno}{multiple:g}")

    writefile(f"{filename}.txt", anno)

    if update:
        os.system(f"hkanno64.exe update -i {filename}.txt {filename}")

    if delete:
        if send2trashInstalled:
            send2trash(f"{filename}.txt")
        else:
            os.remove(f"{filename}.txt")

def speedmult(directory,multiple,update,delete,hkannopath = "."):
    for root, dirs, files in os.walk(directory, topdown=False):
        for name in files:
            if  match(r'(?i)BFCO.*\.hkx$', name):
                editanno(os.path.join(root, name), multiple, update, delete, hkannopath)
            if  match(r'(?i)MCO.*\.hkx$', name):
                editanno(os.path.join(root, name), multiple, update, delete, hkannopath, mco)
    return True